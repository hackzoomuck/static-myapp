apiVersion: v1
kind: ConfigMap
metadata:
  name: jenkins-nginx-conf
data:
  nginx.conf: |
    upstream Backend {
      server spring:8080;
    }
    server {
      listen 80;
      location ~* \.(css|js|gif|jpe?g|png)$ {
        root /usr/share/nginx/html;
        index *.js;
        expires 168h;
      }
      location / {
        root /usr/share/nginx/html;
        index index.html index.htm;
        try_files $uri $uri/ /index.html =404;
      }
      location /register {
        proxy_pass http://Backend/register;
      }
      include /etc/nginx/extra-conf.d/*.conf;
    }
---
apiVersion: v1
kind: Service
metadata:
  name: jenkins-frontend
spec:
  ports:
    - port: 80
      targetPort: 80
  selector:
    app: jenkins-nginx
    tier: jenkins-frontend
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins-frontend-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins-nginx
      tier: jenkins-frontend
      track: stable
  template:
    metadata:
      labels:
        app: jenkins-nginx
        tier: jenkins-frontend
        track: stable
    spec:
      containers:
        - name: jenkins-frontend
          image: xaq03061/nginx
          ports:
            - containerPort: 80
          volumeMounts:
            - mountPath: /etc/nginx/conf.d
              readOnly: true
              name: jenkins-nginx-conf
      volumes:
        - name: jenkins-nginx-conf
          configMap:
            name: jenkins-nginx-conf
            items:
              - key: nginx.conf
                path: nginx.conf
